class SearchRoomTypeForm extends React.Component {
  render() {
    return (
      <div className="form-row">
        <label>Room Type</label>

        <form>
          <div className="inline-form-control">
            <div className="mycheckbox">
              <img src="<%= image_url "home_airglyphs.svg" %>" className="icon" />
              Entire home/apt

             <input type="checkbox"
                    value={this.props.entireHome}
                    onChange={(e) => this.props.onBoolValueChange("entireHome", e)} />
            </div>
          </div><div className="inline-form-control">
            <div className="mycheckbox">
              <img src="<%= image_url "private-room_airglyphs.svg" %>" className="icon" e/>
              Private room

             <input type="checkbox"
                    value={this.props.entireHome}
                    onChange={(e) => this.props.onBoolValueChange("privateRoom", e)} />
            </div>
          </div><div className="inline-form-control">
            <div className="mycheckbox">
              <img src="<%= image_url "shared-room_airglyphs.svg" %>" className="icon" />
              Shared room

             <input type="checkbox"
                    value={this.props.entireHome}
                    onChange={(e) => this.props.onBoolValueChange("sharedRoom", e)} />
            </div>
          </div>
        </form>
      </div>
    );
  }
}

SearchRoomTypeForm.propTypes = {
  entireHome: React.PropTypes.bool.isRequired,
  privateRoom: React.PropTypes.bool.isRequired,
  sharedRoom: React.PropTypes.bool.isRequired,
};

SearchRoomTypeForm = ReactRedux.connect(
  (searchState) => ({
    entireHome: searchState.entireHome,
    privateRoom: searchState.privateRoom,
    sharedRoom: searchState.sharedRoom,
  }),
  SearchStateStore.onChangeCallbacks,
)(SearchRoomTypeForm);
