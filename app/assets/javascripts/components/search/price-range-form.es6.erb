class SearchPriceRangeForm extends React.Component {
  componentDidMount() {
    let slider = noUiSlider.create(this.refs.slider, {
      start: [this.props.minPrice, this.props.maxPrice],
      connect: true,
      margin: 10,
      range: {
        'min': 0,
        'max': 999
      },
      step: 1
    });

    slider.on("update", (values, handle) => {
      if ((Math.round(values[0]) === this.props.minPrice)
          && (Math.round(values[1]) === this.props.maxPrice)) {
        return;
      }

      this.props.onValuesChange({
        minPrice: Math.round(values[0]),
        maxPrice: Math.round(values[1])
      });
    });

    // Fetch when finished dragging.
    slider.on("set", () => {
      this.props.fetchResults();
    });
  }

  render() {
    return (
      <div className="form-row">
        <label>Price Range</label>

        <form className="slider-form">
          <div ref="slider" className="slider"></div>

          <div className="min-price">${this.props.minPrice}</div>
          <div className="max-price">${this.props.maxPrice}</div>
        </form>
      </div>
    );
  }
}

SearchPriceRangeForm.propTypes = {
  minPrice: React.PropTypes.number.isRequired,
  maxPrice: React.PropTypes.number.isRequired
};

SearchPriceRangeForm = ReactRedux.connect(
  (searchState) => ({
    minPrice: searchState.params.minPrice,
    maxPrice: searchState.params.maxPrice,
  }),
  SearchStateStore.onChangeCallbacks,
)(SearchPriceRangeForm);
